name: Build and Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - goos: windows
            goarchs: ["amd64", "386"]
            ext: dll
            runner: windows-latest
          - goos: linux
            goarchs: ["amd64", "386"]
            ext: so
            runner: ubuntu-latest
          - goos: darwin
            goarchs: ["amd64"]
            ext: dylib
            runner: macos-latest
    runs-on: ${{ matrix.runner }}       
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18'
    - name: Install MinGW (Windows only)
      if: matrix.goos == 'windows'
      run: choco install mingw --version 13.2.0 --force
    - name: Cross-Compile Go Library
      working-directory: jsonatago/golang
      env:
        GOOS: ${{ matrix.goos }}
      run: |
        for goarch in ${{ matrix.goarchs }}; do
          export GOARCH=$goarch
          go build -o ../../dist/jsonatago-${{ matrix.goos }}-${goarch}.so -buildmode=c-shared main.go
        done
    - name: Upload .so files
      uses: actions/upload-artifact@v2
      with:
        name: shared-libs
        path: dist/*
  build_wheels:
    needs: build
    strategy:
      matrix:
        include:
          - goos: windows
            goarchs: ["amd64", "386"]
            ext: dll
            runner: windows-latest
          - goos: linux
            goarchs: ["amd64", "386"]
            ext: so
            runner: ubuntu-latest
          - goos: darwin
            goarchs: ["amd64"]
            ext: dylib
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Download shared-libs
        uses: actions/download-artifact@v2
        with:
          name: shared-libs
          path: ./dist
      - name: List package contents
        run: find . -type f
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install setuptools wheel
      - name: Build wheel
        env:
          GOOS: ${{ matrix.goos }}
          EXT: ${{ matrix.ext }}
        run: |
          for goarch in ${{ matrix.goarchs }}; do
            export GOARCH=$goarch
            python setup.py sdist bdist_wheel
          done
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl
